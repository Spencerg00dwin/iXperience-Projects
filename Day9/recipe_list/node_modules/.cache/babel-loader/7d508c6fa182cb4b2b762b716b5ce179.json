{"ast":null,"code":"var _jsxFileName = \"/Users/spencergoodwin/Documents/iXperience/iXperience-Projects/Day9/recipe_list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './App.css';\nimport TaskInput from './component/TaskInput';\nimport TaskTable from './component/TaskTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n\n  function onTaskCreated(recipe) {\n    const newRecipes = [];\n\n    for (let r of recipes) {\n      newRecipes.push(r);\n    }\n\n    newRecipes.push(recipe);\n    setRecipes(newRecipes);\n  }\n\n  function onTaskUpdated(recipe) {\n    const updatedRecipes = recipes.map(r => {\n      if (r.id === recipe.id) {\n        return recipe;\n      } else {\n        return r;\n      }\n    });\n    setRecipes(updatedRecipes);\n  }\n\n  function onTaskRemove(task) {\n    const filteredrecipes = recipes.filter(t => {\n      return t.id !== task.id;\n    });\n    setRecipes(filteredrecipes);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4 bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Grandma's Recipe Book:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n          onTaskCreated: onTaskCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n          onTaskRemove: onTaskRemove,\n          onTaskUpdated: onTaskUpdated,\n          recipes: recipes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"O/YakigGclqCJkazvNfZLBlWnuY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskTable","App","recipes","setRecipes","onTaskCreated","recipe","newRecipes","r","push","onTaskUpdated","updatedRecipes","map","id","onTaskRemove","task","filteredrecipes","filter","t"],"sources":["/Users/spencergoodwin/Documents/iXperience/iXperience-Projects/Day9/recipe_list/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport './App.css'\n\nimport TaskInput from './component/TaskInput'\nimport TaskTable from './component/TaskTable'\n\n\nexport default function App() {\n\n  const [recipes, setRecipes] = useState([])\n\n  function onTaskCreated(recipe){\n    const newRecipes = []\n    for (let r of recipes) {newRecipes.push(r)}\n    newRecipes.push(recipe)\n    setRecipes(newRecipes)\n  }\n\n  function onTaskUpdated(recipe){\n    const updatedRecipes = recipes.map((r)=>{\n      if (r.id === recipe.id){\n        return recipe\n      }\n      else{\n        return r\n      }\n    })\n    setRecipes(updatedRecipes)\n  }\n\n  function onTaskRemove(task){\n    const filteredrecipes = recipes.filter((t) => {\n      return t.id !== task.id\n    })\n\n    setRecipes(filteredrecipes)\n  }\n\n  return (\n    <div className='background'>\n    <div className='container mt-4 bg'>\n\n      <div className='card card-body text-center'>\n\n        <h1>Grandma's Recipe Book:</h1>\n        <hr></hr>\n        <div>Recipes:</div>\n\n      <TaskInput onTaskCreated={onTaskCreated}></TaskInput>\n\n      <TaskTable onTaskRemove={onTaskRemove} onTaskUpdated={onTaskUpdated} recipes={recipes}></TaskTable>\n\n      </div>\n\n    </div>\n\n    </div>\n\n\n  )\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,sCAAP;AACA,OAAO,0CAAP;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAGA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;EAEA,SAASM,aAAT,CAAuBC,MAAvB,EAA8B;IAC5B,MAAMC,UAAU,GAAG,EAAnB;;IACA,KAAK,IAAIC,CAAT,IAAcL,OAAd,EAAuB;MAACI,UAAU,CAACE,IAAX,CAAgBD,CAAhB;IAAmB;;IAC3CD,UAAU,CAACE,IAAX,CAAgBH,MAAhB;IACAF,UAAU,CAACG,UAAD,CAAV;EACD;;EAED,SAASG,aAAT,CAAuBJ,MAAvB,EAA8B;IAC5B,MAAMK,cAAc,GAAGR,OAAO,CAACS,GAAR,CAAaJ,CAAD,IAAK;MACtC,IAAIA,CAAC,CAACK,EAAF,KAASP,MAAM,CAACO,EAApB,EAAuB;QACrB,OAAOP,MAAP;MACD,CAFD,MAGI;QACF,OAAOE,CAAP;MACD;IACF,CAPsB,CAAvB;IAQAJ,UAAU,CAACO,cAAD,CAAV;EACD;;EAED,SAASG,YAAT,CAAsBC,IAAtB,EAA2B;IACzB,MAAMC,eAAe,GAAGb,OAAO,CAACc,MAAR,CAAgBC,CAAD,IAAO;MAC5C,OAAOA,CAAC,CAACL,EAAF,KAASE,IAAI,CAACF,EAArB;IACD,CAFuB,CAAxB;IAIAT,UAAU,CAACY,eAAD,CAAV;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACA;MAAK,SAAS,EAAC,mBAAf;MAAA,uBAEE;QAAK,SAAS,EAAC,4BAAf;QAAA,wBAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAMA,QAAC,SAAD;UAAW,aAAa,EAAEX;QAA1B;UAAA;UAAA;UAAA;QAAA,QANA,eAQA,QAAC,SAAD;UAAW,YAAY,EAAES,YAAzB;UAAuC,aAAa,EAAEJ,aAAtD;UAAqE,OAAO,EAAEP;QAA9E;UAAA;UAAA;UAAA;QAAA,QARA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GArDuBD,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}